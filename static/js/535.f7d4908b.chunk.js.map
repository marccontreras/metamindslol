{"version":3,"file":"static/js/535.f7d4908b.chunk.js","mappings":"+NAOA,MAsGA,EAtGiBA,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAWF,EAASG,OAASH,EAASG,MAAMD,UAC3CE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAiBzC,OAfAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAO,6CACPC,EAAAA,EAAAA,GAASP,KACXM,EAAO,oCAETE,MAAMF,EAAON,GACVS,MAAMC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,wBAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAMK,GAASX,EAAYW,KAC3BC,OAAOC,GAAUC,QAAQD,MAAMA,IAAO,GACxC,CAAChB,KAEFkB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJD,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,0BAAyBH,SAAA,EACvCC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,OAAML,UACbC,EAAAA,EAAAA,KAAA,OACEK,IACE,gEACAvB,EAASwB,IACT,OAEFC,IAAK3B,OAGToB,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAAAJ,UACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAKjB,EAAS0B,YAGjB1B,EAAS2B,SACRX,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASjB,EAAS2B,QAAQD,UAE5BV,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,0BAAyBH,SAAA,EACvCC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,OAAML,UACbC,EAAAA,EAAAA,KAAA,OAEEK,IACE,+DACAvB,EAAS2B,QAAQC,MAAMC,KAEzBJ,IAAKzB,EAAS2B,QAAQC,MAAMC,MALvB7B,EAAS2B,QAAQC,MAAMC,SAQhCX,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAAAJ,UACFa,EAAAA,EAAAA,IACC9B,EAAS2B,QAAQI,YACdC,QAAQ,WAAY,QACpBA,QAAQ,SAAU,QAClBA,QAAQ,UAAW,kBAM9B,GAGDhC,EAASiC,OACNjC,EAASiC,OAAOC,KAAKC,IACnBnB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACG,KACDC,EAAAA,EAAAA,KAAA,UAAAD,SAASkB,EAAMT,SAFNS,EAAMT,OAIjBV,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,0BAAyBH,SAAA,EACvCC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,OAAML,UACbC,EAAAA,EAAAA,KAAA,OAEEK,IACE,6DACAY,EAAMP,MAAMC,KAEdJ,IAAKU,EAAMP,MAAMC,KAAKO,MAAM,KAAK,IAL5BD,EAAMP,MAAMC,SAQrBX,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAAAJ,UACFa,EAAAA,EAAAA,IACCK,EAAMJ,YACHC,QAAQ,WAAY,QACpBA,QAAQ,SAAU,QAClBA,QAAQ,UAAW,iBArBpBG,EAAMP,MAAMC,QA2BxB,KACA,C","sources":["views/champions/Champion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { isNumber } from 'chart.js/helpers'\nimport { CCol, CRow } from '@coreui/react'\nimport parse from 'html-react-parser'\n\n//en el futur mirar de passar en el champion un props que sigui el nom del campio\nconst Champion = () => {\n  const location = useLocation()\n  const itemName = location.state && location.state.itemName\n  const [champion, setChampion] = useState([])\n\n  useEffect(() => {\n    let path = 'http://localhost:8080/champions/champion/'\n    if (isNumber(itemName)) {\n      path = 'http://localhost:8080/champions/'\n    }\n    fetch(path + itemName)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch data')\n        }\n        return response.json()\n      })\n      .then((data) => setChampion(data))\n      .catch((error) => console.error(error))\n  }, [itemName])\n  return (\n    <div>\n      <h1>Champion Details</h1>\n      <CRow className=\"align-items-center pb-2\">\n        <CCol sm=\"auto\">\n          <img\n            src={\n              'https://ddragon.leagueoflegends.com/cdn/14.21.1/img/champion/' +\n              champion.key +\n              '.png'\n            }\n            alt={itemName}\n          />\n        </CCol>\n        <CCol>\n          <h1>{champion.name}</h1>\n        </CCol>\n      </CRow>\n      {champion.passive ? (\n        <div>\n          <span>\n            <strong>{champion.passive.name}</strong>\n          </span>\n          <CRow className=\"align-items-center pb-2\">\n            <CCol sm=\"auto\">\n              <img\n                key={champion.passive.image.full}\n                src={\n                  'https://ddragon.leagueoflegends.com/cdn/14.21.1/img/passive/' +\n                  champion.passive.image.full\n                }\n                alt={champion.passive.image.full}\n              />\n            </CCol>\n            <CCol>\n              {parse(\n                champion.passive.description\n                  .replace('<br><br>', '<br>')\n                  .replace('\\\\n\\\\n', '<br>')\n                  .replace('.\\\\n\\\\n', '.<br>'),\n              )}\n            </CCol>\n          </CRow>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {champion.spells\n        ? champion.spells.map((spell) => (\n            <div key={spell.image.full}>\n              <span key={spell.name}>\n                {' '}\n                <strong>{spell.name}</strong>\n              </span>\n              <CRow className=\"align-items-center pb-2\">\n                <CCol sm=\"auto\">\n                  <img\n                    key={spell.image.full}\n                    src={\n                      'https://ddragon.leagueoflegends.com/cdn/14.21.1/img/spell/' +\n                      spell.image.full\n                    }\n                    alt={spell.image.full.split('.')[0]}\n                  />\n                </CCol>\n                <CCol>\n                  {parse(\n                    spell.description\n                      .replace('<br><br>', '<br>')\n                      .replace('\\\\n\\\\n', '<br>')\n                      .replace('.\\\\n\\\\n', '.<br>'),\n                  )}\n                </CCol>\n              </CRow>\n            </div>\n          ))\n        : ''}\n    </div>\n  )\n}\n\nexport default Champion\n"],"names":["Champion","location","useLocation","itemName","state","champion","setChampion","useState","useEffect","path","isNumber","fetch","then","response","ok","Error","json","data","catch","error","console","_jsxs","children","_jsx","CRow","className","CCol","sm","src","key","alt","name","passive","image","full","parse","description","replace","spells","map","spell","split"],"sourceRoot":""}
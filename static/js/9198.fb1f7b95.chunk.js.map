{"version":3,"file":"static/js/9198.fb1f7b95.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/icons/src/free/cil-arrow-bottom.ts","../node_modules/@coreui/icons/src/free/cil-arrow-top.ts","../node_modules/@coreui/icons/src/free/cil-options.ts","../node_modules/@coreui/utils/src/getStyle.ts"],"sourcesContent":["import React from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CImage,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport {\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cibTwitter,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const progressExample = [\n    { title: 'Players below Gold', value: '', percent: 50, color: 'danger' },\n    { title: 'Players in Gold and Platinum', value: '', percent: 35, color: 'warning' },\n    { title: 'Players between Gold and Dia', value: '', percent: 47, color: 'info' },\n    { title: 'Players below Diamond', value: '', percent: 85, color: 'danger' },\n    {\n      title: 'Players in Diamond and above',\n      value: '',\n      percent: 3,\n      color: 'success',\n    },\n  ]\n\n  return (\n    <>\n      <CCard className=\"mb-0 mt-0\">\n        <CCardHeader>\n          <CRow className=\"justify-content-center\">\n            <CImage src=\"/assets/images/brand/logo.png\" className=\"w-25\"></CImage>\n          </CRow>\n        </CCardHeader>\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"Rank Ladder\" className=\"card-title mb-0\">\n                Rank Ladder\n              </h4>\n              <div className=\"small text-medium-emphasis\">August 2023</div>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: [\n                'Iron',\n                'Bronze',\n                'Silver',\n                'Gold',\n                'Platinum',\n                'Emerald',\n                'Diamond',\n                'Master',\n                'GrandMaster',\n                'Challenger',\n              ],\n              datasets: [\n                {\n                  label: 'Solo Queue',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [8.6, 21, 21, 20, 15, 9.3, 2.6, 0.54, 0.037, 0.015],\n                  fill: true,\n                },\n                {\n                  label: 'Flex Queue',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [9.6, 23, 22, 20, 14, 6.9, 2.1, 0.13, 0.017, 0.0043],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 10,\n                    stepSize: 5,\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","export var cilArrowBottom = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='367.997 338.75 271.999 434.747 271.999 17.503 239.999 17.503 239.999 434.745 144.003 338.75 121.376 361.377 256 496 390.624 361.377 367.997 338.75' class='ci-primary'/>\"];\n","export var cilArrowTop = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625' class='ci-primary'/>\"];\n","export var cilOptions = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M256,144a64,64,0,1,0-64-64A64.072,64.072,0,0,0,256,144Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,256,48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,368a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,368Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,464Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z' class='ci-primary'/>\"];\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getStyle = (property: string, element?: Element) => {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const _element = element ?? document.body\n\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\n}\n\nexport default getStyle\n"],"names":["Dashboard","_jsx","_Fragment","children","_jsxs","CCard","className","CCardHeader","CRow","CImage","src","CCardBody","CCol","sm","id","CChartLine","style","height","marginTop","data","labels","datasets","label","backgroundColor","borderColor","getStyle","pointHoverBackgroundColor","borderWidth","fill","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","CCardFooter","xs","cols","md","title","value","percent","color","map","item","index","CProgress","thin","WidgetsDropdown","lg","CWidgetStatsA","CIcon","icon","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","chart","pointBackgroundColor","drawBorder","min","cilArrowTop","CChartBar","barPercentage","drawTicks","property","element","window","document","_element","body","getComputedStyle","getPropertyValue","replace"],"sourceRoot":""}
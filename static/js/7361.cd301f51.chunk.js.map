{"version":3,"file":"static/js/7361.cd301f51.chunk.js","mappings":"6MA2BA,SAASA,EAAmBC,EAAoBC,GAC9C,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACC,OAAO,aAAYF,SAC5BJ,EAAmBO,KAAI,SAACC,EAAUC,GACjC,IAAMC,EAAS,gEAAAC,OAAmEH,EAASI,OAC3F,OACEV,EAAAA,EAAAA,KAACW,EAAAA,GAAc,CAAAT,UACbU,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,GAAE,oBAAAL,OAAsBH,EAASS,MACjCC,MAAO,CAAEC,SAAUX,EAASS,MAAOb,SAAA,EAGnCU,EAAAA,EAAAA,MAAA,KAAGM,UAAU,kDAAiDhB,SAAA,CAAEI,EAASS,KAAK,QAC9Ef,EAAAA,EAAAA,KAAA,OAEEmB,IAAKC,IAAyBZ,EAC9Ba,IAAKf,EAASI,OAFTJ,EAASS,QAGd,OAAAN,OAPUH,EAASS,QAJJT,EAASS,KAelC,KAnBmChB,IAuB3C,CAEA,UAnDkB,WAChB,IAAAuB,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,IAEtCI,EAAAA,EAAAA,YAAU,WACRC,MAAM,8DACHC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,wBAElB,OAAOF,EAASG,MAClB,IACCJ,MAAK,SAACK,GAAI,OAAKR,EAAiBQ,EAAK,IACrCC,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAMA,EAAM,GAC1C,GAAG,IAGH,IADA,IAAIE,EAAU,GACD,EAAOb,EAAcc,OAAQC,EAAO,CAC/C,IAAI3C,EAAqB4B,EAAcgB,OAD5B,EACsCD,GACjDF,EAAQI,KAAK9C,EAAmBC,EAFrB,GAGb,CACA,OAAOyC,CACT,C","sources":["views/champions/Champions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { CListGroup, CListGroupItem } from '@coreui/react'\nimport { Link } from 'react-router-dom'\n\nconst Champions = () => {\n  const [listChampions, setlistChampions] = useState([])\n\n  useEffect(() => {\n    fetch('https://metamindslol-backend-render.onrender.com/champions')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch data')\n        }\n        return response.json()\n      })\n      .then((data) => setlistChampions(data))\n      .catch((error) => console.error(error))\n  }, [])\n\n  let content = []\n  for (let i = 0; i < listChampions.length; i + 8) {\n    let listEightChampions = listChampions.splice(i, i + 8)\n    content.push(renderChampionsRow(listEightChampions, i))\n  }\n  return content\n}\n\nfunction renderChampionsRow(listEightChampions, iteration) {\n  return (\n    <>\n      <CListGroup layout=\"horizontal\" key={iteration}>\n        {listEightChampions.map((champion, index) => {\n          const imagePath = `https://ddragon.leagueoflegends.com/cdn/14.21.1/img/champion/${champion.image}`\n          return (\n            <CListGroupItem key={champion.name}>\n              <Link\n                to={`/champion/?champ=${champion.name}`}\n                state={{ itemName: champion.name }}\n                key={`link${champion.name}`}\n              >\n                <p className=\"m-0 text-center text-decoration-none text-black\">{champion.name} </p>\n                <img\n                  key={champion.name}\n                  src={process.env.PUBLIC_URL + imagePath}\n                  alt={champion.image}\n                />\n              </Link>\n            </CListGroupItem>\n          )\n        })}\n      </CListGroup>\n    </>\n  )\n}\n\nexport default Champions\n"],"names":["renderChampionsRow","listEightChampions","iteration","_jsx","_Fragment","children","CListGroup","layout","map","champion","index","imagePath","concat","image","CListGroupItem","_jsxs","Link","to","name","state","itemName","className","src","process","alt","_useState","useState","_useState2","_slicedToArray","listChampions","setlistChampions","useEffect","fetch","then","response","ok","Error","json","data","catch","error","console","content","length","i","splice","push"],"sourceRoot":""}